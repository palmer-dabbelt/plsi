# This Makefile fragment is included from Makefile and is not intended to be
# used directly.

ifeq ($(OBJ_TOOLS_BIN_DIR),)
$(error Set OBJ_TOOLS_BIN_DIR to the folder where binaries will be installed)
endif

ifeq ($(OBJ_TOOLS_SRC_DIR),)
$(error Set OBJ_TOOLS_SRC_DIR to the folder where source files will be installed)
endif

ifeq ($(PLSI_CACHE_DIR),)
$(error Set PLSI_CACHE_DIR to the PLSI cache dir)
endif

# Versions of externally developed programs to download
TCLAP_VERSION = 1.2.1
TCL_LIBRARY_VERSION = 8.6
TCL_VERSION = 8.6.6
GCC_VERSION = 4.9.3
PYTHON3_VERSION = 3.4.5

##############################################################################
# GCC
##############################################################################

OBJ_TOOLS_BIN_GCC = $(OBJ_TOOLS_BIN_DIR)/gcc-$(GCC_VERSION)/bin/gcc
OBJ_TOOLS_BIN_GXX = $(OBJ_TOOLS_BIN_DIR)/gcc-$(GCC_VERSION)/bin/g++

# Pretty much everything needs a newer GCC than will be availiable on any CAD
# tools machines.
$(OBJ_TOOLS_BIN_GCC) $(OBJ_TOOLS_BIN_GXX): $(OBJ_TOOLS_BIN_DIR)/gcc-$(GCC_VERSION)/stamp
	touch $@

$(OBJ_TOOLS_BIN_DIR)/gcc-$(GCC_VERSION)/stamp: $(OBJ_TOOLS_SRC_DIR)/gcc-$(GCC_VERSION)/build/Makefile
	+$(SCHEDULER_CMD) -- src/tools/build-gcc --srcdir $(dir $<) --bindir $(dir $@) --logfile $(dir $<)/build.log
	@date > $@

$(OBJ_TOOLS_SRC_DIR)/gcc-$(GCC_VERSION)/build/Makefile: $(OBJ_TOOLS_SRC_DIR)/gcc-$(GCC_VERSION)/configure
	@mkdir -p $(dir $@)
	cd $(dir $@); ../configure --prefix=$(abspath $(OBJ_TOOLS_BIN_DIR)/gcc-$(GCC_VERSION)) --enable-languages=c,c++ --disable-multilib --disable-checking

$(OBJ_TOOLS_SRC_DIR)/gcc-$(GCC_VERSION)/configure: $(PLSI_CACHE_DIR)/distfiles/gcc-$(GCC_VERSION).tar.gz
	@rm -rf $(dir $@)
	@mkdir -p $(dir $@)
	tar -xpf $< --strip-components=1 -C $(dir $@)
	touch $@

$(PLSI_CACHE_DIR)/distfiles/gcc-$(GCC_VERSION).tar.gz:
	@mkdir -p $(dir $@)
	wget https://ftp.gnu.org/gnu/gcc/gcc-$(GCC_VERSION)/gcc-$(GCC_VERSION).tar.gz -O $@

##############################################################################
# pconfigure and related tools
##############################################################################

OBJ_TOOLS_BIN_PTEST = $(OBJ_TOOLS_BIN_DIR)/pconfigure/bin/ptest
OBJ_TOOLS_BIN_PCONFIGURE = $(OBJ_TOOLS_BIN_DIR)/pconfigure/bin/pconfigure
OBJ_TOOLS_BIN_PPKGCONFIG = $(OBJ_TOOLS_BIN_DIR)/pconfigure/bin/ppkg-config
OBJ_TOOLS_BIN_PHC = $(OBJ_TOOLS_BIN_DIR)/pconfigure/bin/phc

$(OBJ_TOOLS_BIN_PTEST) \
$(OBJ_TOOLS_BIN_PCONFIGURE) \
$(OBJ_TOOLS_BIN_PPKGCONFIG) \
$(OBJ_TOOLS_BIN_PHC): $(OBJ_TOOLS_BIN_DIR)/pconfigure/stamp
	touch $@

$(OBJ_TOOLS_BIN_DIR)/pconfigure/stamp: $(OBJ_TOOLS_SRC_DIR)/pconfigure/Makefile
	$(MAKE) -C $(OBJ_TOOLS_SRC_DIR)/pconfigure CC=$(abspath $(CMD_GCC)) CXX=$(abspath $(CMD_GXX)) install
	@date > $@

$(OBJ_TOOLS_SRC_DIR)/pconfigure/Makefile: $(OBJ_TOOLS_SRC_DIR)/pconfigure/stamp $(CMD_GXX)
	@mkdir -p $(dir $@)
	mkdir -p $(OBJ_TOOLS_SRC_DIR)/pconfigure/Configfiles
	rm -f $(OBJ_TOOLS_SRC_DIR)/pconfigure/Configfiles/local
	echo 'PREFIX = $(abspath $(OBJ_TOOLS_BIN_DIR))/pconfigure' >> $(OBJ_TOOLS_SRC_DIR)/pconfigure/Configfiles/local
	echo 'LANGUAGES += c++' >> $(OBJ_TOOLS_SRC_DIR)/pconfigure/Configfiles/local
	echo 'LINKOPTS += -L,$(abspath $(OBJ_TOOLS_BIN_DIR))/gcc-$(GCC_VERSION)/lib64' >> $(OBJ_TOOLS_SRC_DIR)/pconfigure/Configfiles/local
	echo 'LINKOPTS += -Wl,-rpath,$(abspath $(OBJ_TOOLS_BIN_DIR))/gcc-$(GCC_VERSION)/lib64' >> $(OBJ_TOOLS_SRC_DIR)/pconfigure/Configfiles/local
	+cd $(OBJ_TOOLS_SRC_DIR)/pconfigure; $(SCHEDULER_CMD) --max-threads=1 -- ./bootstrap.sh --cc $(abspath $(CMD_GCC)) --cxx $(abspath $(CMD_GXX)) --cxxflags "-L,$(abspath $(OBJ_TOOLS_BIN_DIR))/gcc-$(GCC_VERSION)/lib64 -Wl,-rpath,$(abspath $(OBJ_TOOLS_BIN_DIR))/gcc-$(GCC_VERSION)/lib64"
	cd $(OBJ_TOOLS_SRC_DIR)/pconfigure; PATH="$(OBJ_TOOLS_SRC_DIR)/pconfigure/bin:$(PATH)" ./bin/pconfigure --verbose --ppkg-config $(abspath $(OBJ_TOOLS_SRC_DIR)/pconfigure/bin/ppkg-config) --phc $(abspath $(OBJ_TOOLS_SRC_DIR)/pconfigure/bin/phc)
	+PATH="$(abspath $(OBJ_TOOLS_SRC_DIR)/pconfigure/bin/):$$PATH" $(SCHEDULER_CMD) --make -- $(MAKE) -C $(OBJ_TOOLS_SRC_DIR)/pconfigure -B CC=$(abspath $(CMD_GCC)) CXX=$(abspath $(CMD_GXX))

$(OBJ_TOOLS_SRC_DIR)/pconfigure/stamp: $(shell find src/tools/pconfigure -type f)
	mkdir -p $(dir $@)
	rsync -a --delete src/tools/pconfigure/ $(OBJ_TOOLS_SRC_DIR)/pconfigure
	touch $@


##############################################################################
# TCL and TCLAP
##############################################################################

# Most of the CAD tools have some sort of TCL interface, and the open source
# ones require a TCL installation
$(OBJ_TOOLS_BIN_DIR)/tcl-$(TCL_VERSION)/stamp: $(OBJ_TOOLS_SRC_DIR)/tcl-$(TCL_VERSION)/unix/Makefile
	$(SCHEDULER_CMD) --make -- $(MAKE) -C $(dir $<) install
	@date > $@

$(OBJ_TOOLS_SRC_DIR)/tcl-$(TCL_VERSION)/unix/Makefile: $(OBJ_TOOLS_SRC_DIR)/tcl-$(TCL_VERSION)/stamp $(CMD_GCC)
	cd $(dir $@); ./configure --prefix=$(abspath $(OBJ_TOOLS_BIN_DIR)/tcl-$(TCL_VERSION))

$(OBJ_TOOLS_SRC_DIR)/tcl-$(TCL_VERSION)/stamp: $(PLSI_CACHE_DIR)/distfiles/tcl-$(TCL_VERSION).tar.gz
	rm -rf $(dir $@)
	mkdir -p $(dir $@)
	tar -xzpf $< --strip-components=1 -C $(dir $@)
	touch $@

$(PLSI_CACHE_DIR)/distfiles/tcl-$(TCL_VERSION).tar.gz:
	mkdir -p $(dir $@)
	wget http://prdownloads.sourceforge.net/tcl/tcl$(TCL_VERSION)-src.tar.gz -O $@

# TCLAP is a C++ command-line argument parser that's used by PCAD
$(OBJ_TOOLS_BIN_DIR)/tclap-$(TCLAP_VERSION)/stamp: $(OBJ_TOOLS_SRC_DIR)/tclap-$(TCLAP_VERSION)/Makefile
	$(SCHEDULER_CMD) --make -- $(MAKE) -C $(dir $<) install
	@date > $@

$(OBJ_TOOLS_SRC_DIR)/tclap-$(TCLAP_VERSION)/Makefile: $(OBJ_TOOLS_SRC_DIR)/tclap-$(TCLAP_VERSION)/configure $(CMD_GXX)
	cd $(OBJ_TOOLS_SRC_DIR)/tclap-$(TCLAP_VERSION); ./configure --prefix=$(abspath $(OBJ_TOOLS_BIN_DIR)/tclap-$(TCLAP_VERSION))

$(OBJ_TOOLS_SRC_DIR)/tclap-$(TCLAP_VERSION)/configure: $(PLSI_CACHE_DIR)/distfiles/tclap-$(TCLAP_VERSION).tar.gz
	rm -rf $(dir $@)
	mkdir -p $(dir $@)
	tar -xvzpf $< --strip-components=1 -C $(dir $@)
	touch $@

$(PLSI_CACHE_DIR)/distfiles/tclap-$(TCLAP_VERSION).tar.gz:
	mkdir -p $(dir $@)
	wget 'http://downloads.sourceforge.net/project/tclap/tclap-$(TCLAP_VERSION).tar.gz?r=https%3A%2F%2Fsourceforge.net%2Fprojects%2Ftclap%2Ffiles%2F&ts=1468971231&use_mirror=jaist' -O $@

##############################################################################
# PCAD
##############################################################################

OBJ_TOOLS_BIN_PCAD_INFER_DECOUPLED = $(OBJ_TOOLS_BIN_DIR)/pcad/bin/pcad-pipe-infer_decoupled
OBJ_TOOLS_BIN_PCAD_MACRO_COMPILER = $(OBJ_TOOLS_BIN_DIR)/pcad/bin/pcad-pipe-macro_compiler
OBJ_TOOLS_BIN_PCAD_LIST_MACROS = $(OBJ_TOOLS_BIN_DIR)/pcad/bin/pcad-pipe-list_macros

$(OBJ_TOOLS_BIN_PCAD_INFER_DECOUPLED) \
$(OBJ_TOOLS_BIN_PCAD_MACRO_COMPILER) \
$(OBJ_TOOLS_BIN_PCAD_LIST_MACROS): \
		$(OBJ_TOOLS_BIN_DIR)/pcad/stamp
	touch $@

$(OBJ_TOOLS_BIN_DIR)/pcad/stamp: $(OBJ_TOOLS_SRC_DIR)/pcad/Makefile $(CMD_GXX)
	$(SCHEDULER_CMD) --make -- $(MAKE) -C $(dir $<) install CXX=$(abspath $(CMD_GXX))
	@date > $@

$(OBJ_TOOLS_SRC_DIR)/pcad/Makefile: $(OBJ_TOOLS_SRC_DIR)/pcad/stamp \
				    $(OBJ_TOOLS_BIN_DIR)/tclap-$(TCLAP_VERSION)/stamp \
				    $(OBJ_TOOLS_BIN_DIR)/pson/stamp \
				    $(CMD_PCONFIGURE) $(CMD_PPKGCONFIG) $(CMD_PHC)
	mkdir -p $(dir $@)
	echo 'PREFIX = $(abspath $(OBJ_TOOLS_BIN_DIR))/pcad' >> $(dir $@)/Configfile.local
	echo 'LANGUAGES += c++' >> $(dir $@)/Configfile.local
	echo 'LINKOPTS += -Wl,-rpath,$(abspath $(OBJ_TOOLS_BIN_DIR))/gcc-$(GCC_VERSION)/lib64' >> $(dir $@)/Configfile.local
	echo 'COMPILEOPTS += -O3 -march=native -g' >> $(dir $@)/Configfile.local
	echo 'LINKOPTS += -O3 -march=native -g' >> $(dir $@)/Configfile.local
	cd $(dir $@); $(abspath $(CMD_PCONFIGURE)) --ppkg-config $(abspath $(CMD_PPKGCONFIG)) --phc $(abspath $(CMD_PHC))

$(OBJ_TOOLS_SRC_DIR)/pcad/stamp: $(shell find src/tools/pcad -type f)
	mkdir -p $(dir $@)
	rsync -a --delete src/tools/pcad/ $(OBJ_TOOLS_SRC_DIR)/pcad
	touch $@

##############################################################################
# SBT
##############################################################################

# "builds" a SBT wrapper
$(CMD_SBT): src/tools/sbt/sbt
	mkdir -p $(dir $@)
	cat $^ | sed 's!@@SBT_SRC_DIR@@!$(abspath $(dir $^))!' > $@
	chmod +x $@

##############################################################################
# PSON
##############################################################################

# PSON is a C++ JSON parsing library that also allows for JSON-like files that
# have extra trailing commas floating around.  Piping through this allows
# stateless JSON emission from various other parts of the code.
$(CMD_PSON2JSON): $(OBJ_TOOLS_BIN_DIR)/pson/stamp
	touch $@

$(OBJ_TOOLS_BIN_DIR)/pson/stamp: $(OBJ_TOOLS_SRC_DIR)/pson/Makefile $(CMD_GCC) $(CMD_GXX)
	$(SCHEDULER_CMD) --make -- $(MAKE) -C $(dir $<) CC=$(abspath $(CMD_GCC)) CXX=$(abspath $(CMD_GXX)) install
	date > $@

$(OBJ_TOOLS_SRC_DIR)/pson/Makefile: \
		$(OBJ_TOOLS_SRC_DIR)/pson/Configfile \
		$(OBJ_TOOLS_BIN_DIR)/tclap-$(TCLAP_VERSION)/stamp \
		$(CMD_PCONFIGURE) $(CMD_GCC) $(CMD_GXX)
	@mkdir -p $(dir $@)
	echo 'PREFIX = $(abspath $(OBJ_TOOLS_BIN_DIR)/pson)' >> $(dir $@)/Configfile.local
	echo 'LANGUAGES += c++' >> $(dir $@)/Configfile.local
	echo 'LINKOPTS += -Wl,-rpath,$(abspath $(OBJ_TOOLS_BIN_DIR))/gcc-$(GCC_VERSION)/lib64' >> $(dir $@)/Configfile.local
	cd $(dir $<); $(abspath $(CMD_PCONFIGURE)) --ppkg-config $(abspath $(CMD_PPKGCONFIG)) --phc $(abspath $(CMD_PHC)) --verbose

$(OBJ_TOOLS_SRC_DIR)/pson/Configfile: $(shell find src/tools/pson -type f)
	rm -rf $(dir $@)
	mkdir -p $(dir $@)
	rsync -a --delete src/tools/pson/ $(dir $@)
	touch $@

##############################################################################
# barstools
##############################################################################

# barstools contains firrtl utilities useful for tapeout, like GenerateTop and
# GenerateHarness.
$(OBJ_TOOLS_BIN_DIR)/barstools/bin/%: src/tools/generate-sbt-wrapper $(CMD_SBT)
	@mkdir -p $(dir $@)
	$< --sbt $(abspath $(CMD_SBT)) --project tapeout --sbtstaging "$(abspath obj/sbt-staging)" --sbtargs "-DFIRRTL_HOME=$(abspath $(FIRRTL_HOME))" --basedir $(abspath src/tools/barstools) --main "barstools.tapeout.transforms.$(notdir $@)" --output $@

##############################################################################
# Python3
##############################################################################

OBJ_TOOLS_BIN_PYTHON3 = $(OBJ_TOOLS_BIN_DIR)/python3-$(PYTHON3_VERSION)/bin/python3

# Some machines don't have python3, but I want it everywhere.
$(OBJ_TOOLS_BIN_PYTHON3): $(OBJ_TOOLS_BIN_DIR)/python3-$(PYTHON3_VERSION)/stamp
	touch $@

$(OBJ_TOOLS_BIN_DIR)/python3-$(PYTHON3_VERSION)/stamp: $(OBJ_TOOLS_SRC_DIR)/python3-$(PYTHON3_VERSION)/Makefile $(CMD_GCC) $(CMD_GXX)
	$(SCHEDULER_CMD) --make -- $(MAKE) CC=$(abspath $(CMD_GCC)) CXX=$(abspath $(CMD_GXX)) -C $(dir $<) install
	date > $@

$(OBJ_TOOLS_SRC_DIR)/python3-$(PYTHON3_VERSION)/Makefile: $(OBJ_TOOLS_SRC_DIR)/python3-$(PYTHON3_VERSION)/configure $(CMD_GCC) $(CMD_GXX)
	cd $(dir $@); ./configure --prefix=$(abspath $(OBJ_TOOLS_BIN_DIR)/python3-$(PYTHON3_VERSION)) CC=$(abspath $(CMD_GCC)) CXX=$(abspath $(CMD_GXX))
	touch $@

$(OBJ_TOOLS_SRC_DIR)/python3-$(PYTHON3_VERSION)/configure: $(PLSI_CACHE_DIR)/distfiles/python3-$(PYTHON3_VERSION).tar.gz
	rm -rf $(dir $@)
	mkdir -p $(dir $@)
	tar -C $(dir $@) -xpf $< --strip-components=1
	touch $@

$(PLSI_CACHE_DIR)/distfiles/python3-$(PYTHON3_VERSION).tar.gz:
	@mkdir -p $(dir $@)
	wget https://www.python.org/ftp/python/$(PYTHON3_VERSION)/Python-$(PYTHON3_VERSION).tgz -O $@
