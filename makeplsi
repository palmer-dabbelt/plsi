#!/bin/bash
# Copyright 2017 Edward Wang <edward.c.wang@compdigitec.com>
# Entry point to PLSI that wraps the Makfile invocation to handle
# various loose ends (e.g. using pre-built tool binaries).

# PLSI_MAKEFLAGS should contain all extra arguments to make.
# This is required because some flags critical to PLSI like -o are not
# supported via MAKEFLAGS.

# PLSI_MAKEFILES is a list (string separated by spaces) of all the extra
# Makefiles to include via -f before running the main PLSI makefile.

# Build list of '-f' Makefiles.
# e.g. "file1 file2" -> "-f file1 -f file2"
makefiles=""
IFSold="$IFS"
arr_buf=${PLSI_MAKEFILES}
while true; do
 read -r file rest <<< $arr_buf
  if [ ! -z "$file" ]; then
    makefiles="$makefiles -f $file";
  fi
  arr_buf=${rest}
  if [ -z "$arr_buf" ]; then
    break
  fi
done
IFS="$IFSold"
unset IFSold

make_cmd="make $PLSI_MAKEFLAGS $makefiles -f Makefile.plsi $@"
echo "Make command to be executed: $make_cmd"
#$make_cmd
